// TODO: Type this better
import { jest } from "@jest/globals";
// Unlike the real Obsidian API, this is typed with a discriminated union
export class EventRef {
}
export class Events {
    constructor() {
        this.on = jest.fn((eventName, callback) => {
            return { eventName, callback };
        });
    }
}
export class EventManager {
    constructor() {
        this.listeners = {};
    }
    addListener(event) {
        const { eventName, callback } = event;
        if (!this.listeners[eventName]) {
            this.listeners[eventName] = [];
        }
        this.listeners[eventName].push(callback);
    }
    signalEvent(eventName, ...data) {
        if (!this.listeners[eventName]) {
            return;
        }
        // @ts-expect-error
        this.listeners[eventName].forEach((callback) => callback(...data));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL19fbW9ja3NfXy9vYnNpZGlhbi1tb2NrL2V2ZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUI7QUFFekIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVyQyx5RUFBeUU7QUFDekUsTUFBTSxPQUFPLFFBQVE7Q0FHcEI7QUFFRCxNQUFNLE9BQU8sTUFBTTtJQUFuQjtRQUNDLE9BQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUNYLENBQUMsU0FBaUIsRUFBRSxRQUF5QyxFQUFFLEVBQUU7WUFDaEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsQ0FBQztRQUNoQyxDQUFDLENBQ0QsQ0FBQztJQUNILENBQUM7Q0FBQTtBQUtELE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ0MsY0FBUyxHQUFnQixFQUFFLENBQUM7SUFvQjdCLENBQUM7SUFsQkEsV0FBVyxDQUFzQixLQUFrQjtRQUNsRCxNQUFNLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxXQUFXLENBQ1YsU0FBWSxFQUNaLEdBQUcsSUFBa0M7UUFFckMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDL0IsT0FBTztTQUNQO1FBQ0QsbUJBQW1CO1FBQ25CLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE86IFR5cGUgdGhpcyBiZXR0ZXJcblxuaW1wb3J0IHsgamVzdCB9IGZyb20gXCJAamVzdC9nbG9iYWxzXCI7XG5cbi8vIFVubGlrZSB0aGUgcmVhbCBPYnNpZGlhbiBBUEksIHRoaXMgaXMgdHlwZWQgd2l0aCBhIGRpc2NyaW1pbmF0ZWQgdW5pb25cbmV4cG9ydCBjbGFzcyBFdmVudFJlZjxFIGV4dGVuZHMgRXZlbnROYW1lPiB7XG5cdGV2ZW50TmFtZTogRTtcblx0Y2FsbGJhY2s6IEV2ZW50Q2FsbGJhY2tbRV07XG59XG5cbmV4cG9ydCBjbGFzcyBFdmVudHMge1xuXHRvbiA9IGplc3QuZm4oXG5cdFx0KGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogKC4uLmRhdGE6IHVua25vd25bXSkgPT4gdW5rbm93bikgPT4ge1xuXHRcdFx0cmV0dXJuIHsgZXZlbnROYW1lLCBjYWxsYmFjayB9O1xuXHRcdH1cblx0KTtcbn1cblxuZXhwb3J0IHR5cGUgTGlzdGVuZXJNYXAgPSB7XG5cdFtFIGluIEV2ZW50TmFtZV0/OiBFdmVudENhbGxiYWNrW0VdW107XG59O1xuZXhwb3J0IGNsYXNzIEV2ZW50TWFuYWdlciB7XG5cdGxpc3RlbmVyczogTGlzdGVuZXJNYXAgPSB7fTtcblxuXHRhZGRMaXN0ZW5lcjxFIGV4dGVuZHMgRXZlbnROYW1lPihldmVudDogRXZlbnRSZWY8RT4pIHtcblx0XHRjb25zdCB7IGV2ZW50TmFtZSwgY2FsbGJhY2sgfSA9IGV2ZW50O1xuXHRcdGlmICghdGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXSkge1xuXHRcdFx0dGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXSA9IFtdO1xuXHRcdH1cblx0XHR0aGlzLmxpc3RlbmVyc1tldmVudE5hbWVdIS5wdXNoKGNhbGxiYWNrKTtcblx0fVxuXG5cdHNpZ25hbEV2ZW50PEUgZXh0ZW5kcyBFdmVudE5hbWU+KFxuXHRcdGV2ZW50TmFtZTogRSxcblx0XHQuLi5kYXRhOiBQYXJhbWV0ZXJzPEV2ZW50Q2FsbGJhY2tbRV0+XG5cdCkge1xuXHRcdGlmICghdGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXSkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHQvLyBAdHMtZXhwZWN0LWVycm9yXG5cdFx0dGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soLi4uZGF0YSkpO1xuXHR9XG59XG4iXX0=